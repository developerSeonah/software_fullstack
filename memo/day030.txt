대학교입학
학번   이름   과   동아리   전공
1      		101
2        	104
3         	104
4         	103
5        	102
6         	102
7         	102

축구부 >> 축구부 축구관람부
야구부 >> 야구관람부

동아리
동아리번호   동아리명
101   축구부
102   야구관람부
103   농구부
104   축구관람부

데이터 관리의 편의성을 증진시키기위해서 테이블을 분리 == 정규화
 : 변경사항이 발생했을때, 1곳만 변경가능하기때문 == 응집도 높음 == 결합도 낮음 == 유지보수 용이


회원
회원번호   ID   이름   PW   총구매금액
1   teemo   티모          1000
2           아리          100001
3           아무무         500100
4           모르가나       200000

등급
PK   등급명   최소범위   최대범위
1   브론즈      0   	 9999
2   실버 	      10000      99999
3   골드       100000     499999



특정 컬럼이 존재하지않아도 그 컬럼값을 예상할수있음 == "데이터 중복 발생"
DBMS : 데이터 중복은 DB내에 없어야한다!!!!!
데이터 중복을 피하기위해서 "정규화" 실행 == 테이블 분리

Q1) 정규화가 뭐에요?
    	데이터 중복을 피하기위해서 테이블을 분리하는 것입니다.
Q2) DB 설계할때 가장 중요하게 생각한 것은 무엇인가요?
   	데이터의 중복 발생을 예방하는 것입니다.
   	그래서 정규화를 다양하게 진행했습니다.
Q3) 코딩 테스트
   	테이블 정규화
  	JOIN 문법의 사용
   	서브쿼리

Q4) FK가 왜 상대 테이블의 PK여야하나요?
	NAME으로 하면, 똑같은 이름을 가진 사용자를 구분할 수 없기 떄문에
	PK가 아닌 컬럼으로 설정하면, UNIQUE하지 않아서 구분할 수 없기 때문에
	010-1234-1234전화번호 떠올리기!!

+++++++++++++++++++++++++++++++++++++++

분리되어 있는데(정규화가 되어있는데) 어떻게 불러올까요?

대학교입학
학번   이름   과   동아리   전공
1      		101
2        	104
3         	104
4         	103
5        	102
6         	102
7         	102

FK의 값을 보고 외부 테이블의 값을 끌어오는 SQL문법 == JOIN(조인)문

SELECT 동아리 FROM 대학교;
  >>101
SELECT (JOIN으로 가져온 외부 테이블의 값) AS 동아리명 FROM 대학교;
	>>서브 쿼리 (쿼리문 안에 또 다른 쿼리문이 존재하는 형태 )



1) 제가 테이블 정규화 >>>>> JOIN 문 사용하여 데이터 출력 보여주실 예정
그럼
2) 여러분이 현재 day030 의 내용을 판매자 ID > NAME값이 나오도록 변경!!


--------------------------------------

2)원본 데이터가 사라질 때, 연결 데이터는 유지되는 방법
대학생
	동아리x

1)원본 데이터가 사라질 때, 연결 데이터도 함께 사라지는 방법
댓글
	회원 탈퇴
	>>댓글들이 사라짐

-----------

1) 테이블 분리 , 즉 테이블 새로만들기는 정규화 때문에 하는 것이다
2) 정규화는 데이터 중복을 없애기 위해하는 것이다.

-------

1) 외부키 설정은 alter로 시작된다

----

1) 문제 파악
2) 키워드 찾았으면
3) 관련 문법 체크

-------------------------
Controller,index.jsp는 view 페이지가 아니다

Controller.jsp 를 기능별로 만들어라
	==>	

1.ctrl_login.jsp 로 분할하면?
	메뉴별로 카운터가 다른 카페

2. Ctrl.jsp 통합
	카운터에서 모든 주문을 받아서 기능을 수행

--------------------------
Admin.jsp


무슨 주문(기능 수행)인지 action 파라미터에 저장하여
		   CONTROLLER.JSP 로 전송
		
action=INSERTPRODUCT

INSERTPRODUCT   상품추가
DELETEPRODUCT   상품삭제
MAIN      메인으로 이동
JOIN      회원가입
LOGOUT      로그아웃
MYPAGE      마이페이지로 이동
CART      장바구니로 이동
LOGIN      로그인
PRODUCT      상품상세페이지로 이동
CHANGENAME   이름변경
DELETEID   회원탈퇴
ADDCART      장바구니에 추가

기능에는 2종류	기능/ 페이지 이동

화면을 전환
어떤 작업을 해주는 것

로그아웃 기능 == LOGOUT
메인으로 이동 == main

1. Main.jsp 에서[로그아웃] 버튼 클릭 시,
2. controller.jsp?action=LOGOUT
	C 야, action 파라미터 값으로 LOGOUT

3.로그 아웃 기능을 먼저 수행
		session.removeAttribute("member");
		session.removeAttribute("cart");
		out.println("<script>alert('로그아웃 성공!');
		location.href='controller.jsp?action=MAIN';</script>");

4. 결론 ) 로그아웃은 v->c->c->v이다
	c여러번 됨
	결제 하실 때 잠깐 대기
	v C C C C C C C V
	C가 많아서 느린 경우가 있는데,
	이걸 개발자가 시간을 단출할 수는 없다
		우회해야함
		다른 아이디어를 써야함
	
	인스타 그램 사진 업로드 시,	
		사진을 먼저 선택 >>> 글작성
		벌써 업로드 시작함 	 글을 다쓰고 버튼을 누르면
				  글만 올림 ㅋ
				

	else if(action.equals("MAIN")){
		if(productDTO.getSearchKeyword()==null){
			productDTO.setSearchKeyword("ALL");
		}
		메인
		request.setAttribute("datas", productDAO.selectAll(productDTO));
		pageContext.forward("main.jsp");


1. 요청 들을 CTRL.jsp 한 페이지에서 처리
2. 요청에는 두가지 종류 : 기능 / 페이지 이동
3. 페이지 이동시, 포워드 vs 리다이렉트

거의 모든 페이지는 뭔가 데이터를 보여주려고함
	C에서 데이터를 받아왔어야만함
	결론) 처음 시작을 V xxxx
		      C 0  ===> index.jsp 반드시 필요함 === 표지 페이지
	


--------------------------
product.jsp


ProductDTO data=(ProductDTO)request.getAttribute("data");
선언을 하기 위해서 사용


V 작업자들은 JAVA사용을 최소화 할수 록 잘한 것이다 -> 자바는 백사이드 언어이다 자바 사용을 최소화 하기 위해서

	1)EL식(EL표현식)
	2)JSTL	
	3)커스텀 태그
		=>언어 결합도를 낮출수 있다

V 작업자들은 Javascript사용 이 좋다

EL 표현식
${객체명.멤버변수명}/ ${10+20} 간단한계산식 가능 /  ${10 gt 20}  ${10 eq 10} / 연산자가 존재하는 하나의 언어의 체계이다
단, request,session,(,application)에 setAttribute에 등록되어 있어야한다.

















