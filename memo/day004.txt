Primary Key : "데이터를 '식별'" 할 수 있게 해주는 값
ex) 주민번호, 학번, ...
/사용자가 지정하는 것이 아니라, 프로그램에서 부여하는 값
현재 학생부 프로그램에서는 '번호' == PK

경계값 검사란?
조건식에 들어가있는 변수들이 경계에 닿은 숫자들이어도
해당 조건식이 유효한지 확인하는 것

1<=num && num <= cnt
cnt ---->반드시 1보다 크거나 같아야한다.
0인 경우는? error

	내 프로그램 문제) 2-4. cnt가 0일 때의 경계값 검사가 없었음

함수는 input 기능 out
 함수명은 기능을 바로 알 수 있게 지어야함!

output 함수명(input)
void main(String[] args)
  => output이 없는 main 함수다
      이 main() arg를 인자로 갖는다~~

input 입력인자 인수 arguments 매개변수 파라미터 parameter
output 결과값 반환 return 리턴 출력값

함수 4유형
- input  x 	output  x
- input  o 	output  x
- input  x		output  o	
- input  o	output  o

기본적인 모습
public output 함수명(input) {		
}
	java는 기본적으로 공개를 기본으로 하기 때문에 public임

1유형
	public static void hello() {
		// 기능 구현
		System.out.println("안녕하세요.");
	}
	//함수 선언 자리
	// void == output이 없다.
	// static == 객체와 무관하게

	함수라는 것을 개발 할 때 사용하는 이유
	1. 코드를 재사용할 수 있음★ ====> 유지보수 용이
		-> 오류가 없는 코드를 재사용하는 것이기 때문에
			오류 검사 비용이 추가x == 경제적
			시간이 추가 x == 효율적
		=> 오류의 파급효과가 줄어듦
	2. main()의 코드 가독성이 좋아짐

2유형
	public static void test(int num) {
		num *= 100;
		System.out.println(num);
	}
	//함수를 호출할 때 인자를 전달하는 방식 : 해당 변수의 "값"만 전달
		== call by value(값에 의한 호출)
	//main과 test의 num은 서로 다름
	//test가 끝나는 즉시 test의 메모리는 사라짐

	public static void printAvg(int num1, int num2) {		// 메서드 시그니쳐 부분

	각각의 함수들의 메모리 공간은 서로 다르다.

3유형
	private static int test() {
		int a=3, b = 5;
		int sum = a+b;
		return sum;		//함수가 return을 만나면 "즉시" 함수를 종료함
	}
	
	잘 사용되진 않음

4유형
	 public static int plus(int a, int b) {
		System.out.println("plus() 함수 호출 됨");
		//로그 역할
		
		return a+b;
	}

		//isXxxx(), hasXxxx() ------> boolean 반환

for(배열에 저장된 자료형 변수명: 배열명)
	forEach문, 향상된 for문, 배열과 함께 사용하는 for문
	배열의 크기만큼 수행함
	index[0]부터 변수가 해당 안덱스의 데이터를 대신함

개발자 메모리 영역(=힙메모리)
// new 연산자 : 개발자 메모리 영역에 공간을 만들어줘
// 		힙메모리 영역에 만든 배열의 주소는 메인 메모리에 저장
// 힙메모리는 메인에도 영향을 줌
// 메소드로 받을 때 주소값을 받음

test(datas);
		//new로 제작한 변수를 전달하는 함수
		//call by reference(참조에 의한 호출)
		//    인자에 대해서 주고받는 것에 서만 해당

-----------------------------
주말과제
학생부 프로그램 함수를 사용해서 줄여오기
월요일에 2팀 랜덤발표 준비하기
블로그 작성하기

----------------------
ctrl + i	: 줄 정렬


