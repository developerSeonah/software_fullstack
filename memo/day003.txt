"중첩 반복문"
	콘솔에 의존해서
	결과물 똑같치 출력하는데에 초점을 둔다..xxx

1. 디버깅표 그리기 뿌셔!
2. 지난시간내용 복습하기

4000 알고리즘 로직 문제를 풀 수 있나?
	디버깅표를 그리기
		>> 중첩 반복문

디버깅표 연습
(1)
*****
*****
*****

(2)
*
**
***
****
*****

a	a<5	i	???
-------------------------------------
0	T	0	T	
		1	F	
1	T	0	T	
		1	T
		2	F
2	T	0	T
		1	T
		2	T
		3	F
3	T	0	T
		1	T

4	T
5	F


(3)
***
**
*

a	a<3	i	???	a+i
-----------------------------------------------------
0	T	0	T	0	t
		1	T	1	t
		2	T	2	t
		3	F	3	f
1	T	0	T	1	t
		1	T	2	t
		2	F	3	f
2	T	0	T	2	t
		1	F	3	f
3	F			3	f

==> a+i < 3, i < 3-a


[배열]

자료구조
배열리스트 연결리스트 큐 스택 트리 집합 맵 ...
내가 배우는 기술!
언제 사용할까?
1. 크기 : 개수를 분명하게 알고있는 데이터들을
2. 관련성 : 이 데이터들이 서로 관련이 있는 상태에서
3. 자료형 : 자료형이 같을 때 
세 가지를 모두 만족했을 때만 배열이 가능

ex) 학생의 국어, 영어, 수학 점수	(o)
     학생1의 평균, 학생2의 평균, .... 학생10 평균	(o)
     학생의 이름, 나이, 평균 정보 (x) 자료형이 다름


int i = 0; i < number.length; i++
0<=n&&n<number.length


[프로그램]
★"요구사항"이 가장 중요
개발하기 전에 확실히 집고 말해놔야 한다.

보통 8개월 정도 18개월 까지 제작기간을 가지는데
절반이상을 설계에 사용한다!
기본 5개월 6~8개월 까지는 "설계기간"

일하는 중..."한글코딩"

프로그램에서 모든 요구사항은 CRUD로 귀결됩니다.
데이터
creat 생성	회원가입, 게시글 작성
read 출력		로그인, 게시글 검색
update 변경	프로필 사진변경, 글 변경
delete 삭제	회원탈퇴, 글 삭제

상품구매 >> 사용자가 해당상품을 구매했다는 사실이 기록	(생성)
	>> 이 상품의 판매량이 증가			(변경)
   => 하나의 기능이 2가지의 액션을 가질 수 있다.

CRUD, 비즈니스 메서드, 비즈니스 로직, 핵심 로직, 핵심 관심


"학생부 프로그램"
사용자의 첫번째 요구사항
1. 최대 5명까지 저장할 수 있는 학생부가 있습니다.
2. 학생부 프로그램을 작성해주세요.

개발자와의 1차 요구사항 회의를 통해..
CRUD
C : 학생을 추가(동명이인x)
R : 학생부를 전체 출력 / 학생이름으로 검색 >> selectAll
R : 1번 학생 이름출력		>>selectOne, getOne
	※ 같은 R이여도 All, One이 있다!
U : 학생의 이름 변경
//D : 학생삭제 >> 배열에서는 삭제가 불가능 (이번만 뺌)
(그래서 D를 하는 모든 프로그램에서는 배열을 사용하지 않음)
--------------------------
개발자는 제작할 때
1. 샘플 데이터를 확보
	ex) 학생이 존재한다고 가정하고,
2. R(selectAll)부터 제작
	===>> 임의의 데이터를 생성해놓고, 잘 출력이 되는지 확인
(3. C부터 제작을 해서, 생성한 데이터 공간에 데이터가 잘 추가되는지 확인)

유효성 검사는 더 넓은 범위로, 꼼꼼하게 해야한다.
유효성 검사는 "사용자의 입력마다" 사용하는 게 좋다.


내가 이름을 추가할 때, 
만약 이름이 이미 저장되어 있다면, 
다시 이름을 입력받도록

1. 플래그 알고리즘(로직)
  >> 어떤 기능을 할지말지를 결정할 때에 활용
2. 이미 완성되어있는 코드에서
	새로운 로직을 추가할 때!
	어떻게 하는지 방법을 보여드리려고!!

사용자가 이름입력
사용자가 의도한 이름이라면,
if(저장하려는 이름이 이미 존재한다면)
	위로다시 돌아가기
저장


-----------------------
목요일 과제
별찍기 디버깅표 복습하기
학생부 프로그램 완성해보기


금요일 과제
    *
   **
  ***
 ****
*****

토요일 과제
*****
 ****
  ***
   **
    *

일요일 과제
   *  
  *** 
 *****
*******

그려보기


