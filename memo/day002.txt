int tmp = 0;
//tmp, temp, 임시저장변수 >> 값을 교환할 때 주로 사용됨

모든 프로그램, 컴퓨터는 동시에 처리가 불가능하다.

double avg = sum / 3.0;  //연산자 총 2개 = 대입 연산자, 산술 연산자
32/3 (정수)/(정수)=> 데이터 손실 발행
산술 연산자가 대입연산자보다 우선순위가 높다.
32/3 -> 10
avg = 10;

로그 작업 ★
로그란?
로그 == 히스토리 보드
	== 기록

과제3 프로그램에서 로그를 찍은 후의 결과 알 수 있는 것
1. 코드 에러 xxx
2. op는 데이터가 들어가 있다.
3. "공백" 데이터였다!


버퍼 커서

사용자의 입력을 기다리는 공간
사용자가 값을 입력하면 곧바로 메모리에 저장xxx
버퍼 공간을 거쳐 메모리로 이동함
그렇기에 연산자 입력 전에 sc.nextLine()을 입력하여 버퍼 공간을 한 번 지워줘야 한다.


변수 상단배치 스타일 코드
연산자의 우선순위
로그 : 코드흐름파악, 변수값 확인
버퍼공간
String은 equals() 함수로 값비고
	연산자로는 객체계산 x


3교시
while vs for

반복횟수를
모를 때 vs 알 때

while
무한루프(무한반복문)일 때 주로
 + 종료조건(반드시)

ex)
정수를 입력할건데 0이하의 정수가 입력되면 종료
학생의 이름을 입력하는데 "종료"라고 입력하면 종료
정수를 입력해주세요. 총합이 100이 넘어가면 종료


for
범위가 정해져있고, 동작횟수가 정해져있음

초기 조건 문장 증감 조건 문장 증감 조건★
조건문으로 끝난다는게 중요
조건식에서 F가 되면 끝


continue;		//생략
자신과 가장 가까운 반복문의 처음으로 "즉시" 이동
"반복문을 계속할건데 멈추고 싶진 않아"
"~~한 경우라면 그때만 안하고 싶어"

[2] 경우 디버깅
i	i<=10	i%2 ==1
-----------------------------------
1	T	T -> continue
2	T	F -> 2
3	T	T -> continue
4	T	F -> 4


뉘양스 차이
정수를 입력받을 건데 10이상이 입력되면 종료 
>> while, 언제 10이 입력될지 모르기 때문에

10번 정수를 입력받을 건데 0이상이 입력되면 종료
>>while로도 구현은 가능하지만 for이 유리

3명의 학생을 입력받고싶습니다.
입력 중간에 "종료"라는 학생 이름이 입력된다면
더이상 학생이름을 받지 않습니다.
>>최대값이 정해져있기 때문에 for이 유리

--------------------------------
1. 정수를 입력받습니다.
입력된 정수가 짝수라면 총합에 더해주세요.
0이하가 입력되면 멈춥니다.
멈추고서 최종 총합을 출력해주세요

2. 1~10까지의 정수를 역순으로 출력해주세요.
ex) 10 9 8 7 ... 1

3. 정수를 2개 입력받아서 오름차순으로 출력해주세요.
ex) a=3, b=5	3 4 5
ex) a=10 b=8	8 9 10

4. 정수는 5번 입력합니다. 모든 입력이 끝난후, 입력한 정수중에서 가장 큰 값을 출력해주세요.

5. 1~100사이의 정수만 1번 입력합니다. 입력한 정수의 약수들을 모두 출력해주세요.


어떤 값을 범위 내에서 찾을 때는 기준이 되는 수가 필요(= pivot)