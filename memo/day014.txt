문제 풀이
평균 출력에서 나온 질문, 어디에 로직을 짜야하나요?
1. V ex) 쿠팡의 총합금액 로직 등은 V에 위치함
  데이터가 기록되지 않은 것
2. M vs C  ex) 롤(오피지지) 승률픽률 로직 등은 백단에 위치함
  계산해서 결과값을 보관, 전송하는 것
  데이터가 많은 경우(학생이 많아질수록, 성적이 다양해질수록)에 V에 로직이 있으면 느려질 것으로 예상되므로, 백단에서 로직을 위치시킬 예정

나는 뷰에 넣으면 배열의 크기(학생 수)를 불러오는 인자도 받아야 하는데, 백단에는 이미 배열이 존재하므로 바로 불러서 사이즈만 찾으면 되므로, 백단에서 작성하였다. 함수로 따로 만드는 것이 좋아보였다.

평균값
  selectOne
selectOne의 output은 무조건 DTO
double을 주고 싶으면
DTO 안의 속성을 이용
	DTO에 double 타입을 추가(클래스 변수)

모든학생데이터를 알아야 하니까
 selectAll
M에서는 전체 데이터를 줄 수 있는 로직 O
    압축해서 던져주는 역할 == C
V에서는 평균을 보여주는 메서드

// 데이터 뷰에 맞게 정제, 가공
 ex)비밀번호 관련 (****로 나오는 것)

점수변경
점수를 update를 만드는데 비슷한 함수가 있는데 this로 사용하면 안 돼나요?
결론) update 안에 selectOne 로직이 중복으로 들어가야됨
	해킹 위조변조로 update에 오류가 생길 수 있음
		실무에서는 로직을 하나하나 다 추가한다 
		비교 로직을
		존재하나? 하고 찾는 로직
=============
앞으로는 안 할 수 있음

++++++++
일부 쇼핑몰의 간단하게 제작해주는 팀은
안하는 경우에는 update 기능 자체를

제 프로필 사진을 변경하고 싶어요
selectOne >> UPDATE

1. 원칙대로면 데이터 위변조 때문에
	로직마다마다 확인을 다 한다.
2. 생략하는 경우, selectOne 을 한 다음에야
	update 할 수 있게 한다.

지금 단게에서는 this.selectOne() 추천 안함
			근데 좋은 생각임

--------------------------------------
연습
[게시글 작성 사이트]
게시글 작성 [C]
게시글 전체 목록 : 번호 | 제목 | 조회수  [R]
게시글 1개 내용 확인 : 제목 | 내용 | 조회수  [R - selectOne, U]
			조회수++
게시글 내용 변경  [U]
게시글 제목 변경  [U]
게시글 삭제  [D]
게시글 제목으로 검색해서 확인  [R - selectAll]
게시글 제목 / 내용 / 조회수 / PK(게시글 번호)

CRUD


---
C V M

실무에서는 병렬적으로 진행
	동시에 코드를 작성

DAO는 무조건 CRUD 때문에 있음 
함수는 무조건 5개만 생성 (insert, update, delet, selectAll, selectOne)
오버라이딩은 가능
값을 변경하는 것은 무조건 update 함수를 통해서만

데이터 타입이 2개인 리턴하는 법

배열[]  관련, 개수, 자료형 >> 자료형이 같은 경우만 되서 비추천
ArrayList  관련, 자료형 >> 자료형이 같은 경우라 비추천
Map	한 쌍의 관리, 제목+내용은 어떨까?
	2개가 한 쌍이 아니라면 사용 불가능
	제목이 키값이 됨 == 제목 값이 유일해야됨 == UNIQUE 비추천
DTO	XxxDTO == Xxx 데이터
	BoardDTO == Board 데이터와 관련된 것들을 들고다닐 수 있음 추천!

내용 업데이트
1. selectOne 수행한 다음 update
	조회수++
2. 그냥 바로 update


[프로그래머의 최고목표]
유지보수 용이한 코드를 작성하는 것
  1) 결합도가 낮은 코드
	코드가 조각조각 분리가 잘 되어있다.
	모듈화(컴포넌트화, 함수화)가 잘 되어있다.
	겹치는 부분이 적다.
	1개의 변경사항이 발생했을 때, 코드 1곳만 변경하면 된다는 것을 의미한다.
	ex) 하드 코딩을 없앤다.


	DAO의 인자는 DTO로 통일

	1요청, 1객체 == 1요청, 1 new
	정확도와 위변조 방지를 위해

	=> 메서드가 무조건 5개가 나오기 때문에 1개에서 용도를 묶어야 한다.
  2) 응집도가 높은 코드
	하나의 코드 파일(블록, 영역)에 하나의 로직만 담겨있다.
	U -> U
	C -> insert
	selectAll -> N
	하나의 로직이 여기저기에 퍼져있으면 안 된다.
	업데이트가 여기저기 있으면 안 된다.(오버로딩 x)
		if(A 변경시) else if(B 변경시) 등등..
	그렇기 때문에 개발자에게 필요한 데이터인 String condition 생성해서
	if(condition이 제목 변경이야?) => 그럼 ~
            이런식으로 사용, 영어로 사용하기

	selectOne은 PK값을 이용하여 1개의 값만 가져오므로 condition이 필요없음

원칙대로는 원본 데이터 (this.데이터)는 사용하면 안 됨
그 배열의 값을 하나하나 새로운 배열에 복사하여 줘야 함.

